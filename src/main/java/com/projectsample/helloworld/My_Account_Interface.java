/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.projectsample.helloworld;

import java.awt.Cursor;
import java.awt.Dimension;
import java.sql.ResultSet;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;

/**
 *
 * @author Ela
 */
public class My_Account_Interface extends javax.swing.JFrame {

    /**
     * Creates new form My_Account_Interface
     */
    
    private My_SQL_Connection connection;
    private String blankText;
    private boolean[] isCardClicked;
    private boolean[] doesUpdateFail;
    private boolean[][] iFieldValueUpdated;
    
    public My_Account_Interface() {
        initComponents();
        Colour.setToCartItemColor(viewOrdersBGPanel, "entered");
        doesUpdateFail = new boolean[3];
        isCardClicked = new boolean[4];
        iFieldValueUpdated = new boolean[3][4];
        scrollPanel.getVerticalScrollBar().setUI(new My_Scrollbar_UI());
        connection = new My_SQL_Connection();
        blankText = "                         ";
        var resultSet = Database_Transaction.retrievePurchasedOrder(connection);
        createOrderPanel(resultSet);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newOrderPanel = new javax.swing.JPanel();
        qtyLabel = new javax.swing.JLabel();
        dishNameLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        cancelLabel = new javax.swing.JLabel();
        backmostPanel = new javax.swing.JLayeredPane();
        leftPanel = new javax.swing.JPanel();
        viewOrdersBGPanel = new javax.swing.JPanel();
        viewOrdersLabel = new javax.swing.JLabel();
        cartIcon = new javax.swing.JLabel();
        settingsBGPanel = new javax.swing.JPanel();
        settingsLabel = new javax.swing.JLabel();
        settingIcon = new javax.swing.JLabel();
        personalInformationBGPanel = new javax.swing.JPanel();
        personalInformationLabel = new javax.swing.JLabel();
        addressSettingsBGPanel = new javax.swing.JPanel();
        addressSettingsLabel = new javax.swing.JLabel();
        accountSettingsBGPanel = new javax.swing.JPanel();
        accountSettingsLabel = new javax.swing.JLabel();
        exitBGPanel = new javax.swing.JPanel();
        exitLabel = new javax.swing.JLabel();
        exitIcon = new javax.swing.JLabel();
        rightPanel = new javax.swing.JLayeredPane();
        viewOrdersCard = new javax.swing.JPanel();
        purchaseHistoryTextBGPanel = new javax.swing.JPanel();
        upperText = new javax.swing.JLabel();
        scrollPanel = new javax.swing.JScrollPane();
        orderHistoryPanel = new javax.swing.JPanel();
        infoSettingsCard = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        contactNumberLabel = new javax.swing.JLabel();
        saveChangesBGPanel1 = new javax.swing.JPanel();
        saveChangesLabel1 = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        contactNumberField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        upperText1 = new javax.swing.JLabel();
        upperText2 = new javax.swing.JLabel();
        errorInfoChangeLabel = new javax.swing.JLabel();
        addressSettingsCard = new javax.swing.JPanel();
        upperText3 = new javax.swing.JLabel();
        upperText4 = new javax.swing.JLabel();
        completeAddressLabel = new javax.swing.JLabel();
        completeAddressField = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        barangayLabel = new javax.swing.JLabel();
        barangayAddress = new javax.swing.JComboBox<>();
        jSeparator7 = new javax.swing.JSeparator();
        saveChangesBGPanel2 = new javax.swing.JPanel();
        saveChangesLabel2 = new javax.swing.JLabel();
        addressChangeLabel = new javax.swing.JLabel();
        accountSettingsCard = new javax.swing.JPanel();
        upperText5 = new javax.swing.JLabel();
        upperText6 = new javax.swing.JLabel();
        emailAddressLabel = new javax.swing.JLabel();
        emailAddressField = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        currentPasswordLabel = new javax.swing.JLabel();
        currentPasswordField = new javax.swing.JPasswordField();
        jSeparator8 = new javax.swing.JSeparator();
        newPasswordLabel = new javax.swing.JLabel();
        newPasswordField = new javax.swing.JPasswordField();
        jSeparator9 = new javax.swing.JSeparator();
        confirmPasswordLabel = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();
        jSeparator10 = new javax.swing.JSeparator();
        errorAccountChangeLabel = new javax.swing.JLabel();
        saveChangesBGPanel3 = new javax.swing.JPanel();
        saveChangesLabel3 = new javax.swing.JLabel();
        passwordPeekBGPanel1 = new javax.swing.JLayeredPane();
        firstBGPanel1 = new javax.swing.JPanel();
        showLabel1 = new javax.swing.JLabel();
        secondBGPanel1 = new javax.swing.JPanel();
        hideLabel1 = new javax.swing.JLabel();
        thirdBGPanel1 = new javax.swing.JPanel();
        emptyLabel1 = new javax.swing.JLabel();
        passwordPeekBGPanel2 = new javax.swing.JLayeredPane();
        firstBGPanel2 = new javax.swing.JPanel();
        showLabel2 = new javax.swing.JLabel();
        secondBGPanel2 = new javax.swing.JPanel();
        hideLabel2 = new javax.swing.JLabel();
        thirdBGPanel2 = new javax.swing.JPanel();
        emptyLabel2 = new javax.swing.JLabel();
        passwordPeekBGPanel3 = new javax.swing.JLayeredPane();
        firstBGPanel3 = new javax.swing.JPanel();
        showLabel3 = new javax.swing.JLabel();
        secondBGPanel3 = new javax.swing.JPanel();
        hideLabel3 = new javax.swing.JLabel();
        thirdBGPanel3 = new javax.swing.JPanel();
        emptyLabel3 = new javax.swing.JLabel();

        newOrderPanel.setBackground(new java.awt.Color(36, 25, 29));
        newOrderPanel.setPreferredSize(new java.awt.Dimension(297, 50));

        qtyLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        qtyLabel.setForeground(new java.awt.Color(255, 255, 255));
        qtyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qtyLabel.setText("13 Ã— ");

        dishNameLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        dishNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        dishNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dishNameLabel.setText("Pasta and Meatballs");

        priceLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        priceLabel.setForeground(new java.awt.Color(255, 255, 255));
        priceLabel.setText(" - PHP 215.00");

        cancelLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        cancelLabel.setForeground(new java.awt.Color(255, 255, 255));
        cancelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelLabel.setText("Cancel");

        javax.swing.GroupLayout newOrderPanelLayout = new javax.swing.GroupLayout(newOrderPanel);
        newOrderPanel.setLayout(newOrderPanelLayout);
        newOrderPanelLayout.setHorizontalGroup(
            newOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newOrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(qtyLabel)
                .addGap(0, 0, 0)
                .addComponent(dishNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cancelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
        );
        newOrderPanelLayout.setVerticalGroup(
            newOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(qtyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(dishNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cancelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(priceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFocusCycleRoot(false);
        setUndecorated(true);
        setResizable(false);

        leftPanel.setBackground(new java.awt.Color(36, 25, 29));

        viewOrdersBGPanel.setBackground(new java.awt.Color(36, 25, 29));

        viewOrdersLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        viewOrdersLabel.setForeground(new java.awt.Color(255, 255, 255));
        viewOrdersLabel.setText("VIEW ORDERS");
        viewOrdersLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viewOrdersLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewOrdersLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewOrdersLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewOrdersLabelMouseExited(evt);
            }
        });

        cartIcon.setIcon(new javax.swing.ImageIcon("C:\\Users\\meizz\\Downloads\\Pictures\\Cart icon.png")); // NOI18N

        javax.swing.GroupLayout viewOrdersBGPanelLayout = new javax.swing.GroupLayout(viewOrdersBGPanel);
        viewOrdersBGPanel.setLayout(viewOrdersBGPanelLayout);
        viewOrdersBGPanelLayout.setHorizontalGroup(
            viewOrdersBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewOrdersBGPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cartIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewOrdersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        viewOrdersBGPanelLayout.setVerticalGroup(
            viewOrdersBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewOrdersLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(viewOrdersBGPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(cartIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        settingsBGPanel.setBackground(new java.awt.Color(36, 25, 29));

        settingsLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        settingsLabel.setForeground(new java.awt.Color(255, 255, 255));
        settingsLabel.setText(" SETTINGS");

        settingIcon.setIcon(new javax.swing.ImageIcon("C:\\Users\\meizz\\Downloads\\Pictures\\Settings icon.png")); // NOI18N

        javax.swing.GroupLayout settingsBGPanelLayout = new javax.swing.GroupLayout(settingsBGPanel);
        settingsBGPanel.setLayout(settingsBGPanelLayout);
        settingsBGPanelLayout.setHorizontalGroup(
            settingsBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsBGPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(settingIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        settingsBGPanelLayout.setVerticalGroup(
            settingsBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(settingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(settingsBGPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(settingIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        personalInformationBGPanel.setBackground(new java.awt.Color(36, 25, 29));

        personalInformationLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        personalInformationLabel.setForeground(new java.awt.Color(255, 255, 255));
        personalInformationLabel.setText("   Personal information ");
        personalInformationLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        personalInformationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personalInformationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                personalInformationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                personalInformationLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout personalInformationBGPanelLayout = new javax.swing.GroupLayout(personalInformationBGPanel);
        personalInformationBGPanel.setLayout(personalInformationBGPanelLayout);
        personalInformationBGPanelLayout.setHorizontalGroup(
            personalInformationBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(personalInformationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        personalInformationBGPanelLayout.setVerticalGroup(
            personalInformationBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(personalInformationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        addressSettingsBGPanel.setBackground(new java.awt.Color(36, 25, 29));

        addressSettingsLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        addressSettingsLabel.setForeground(new java.awt.Color(255, 255, 255));
        addressSettingsLabel.setText("   Address settings ");
        addressSettingsLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addressSettingsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addressSettingsLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addressSettingsLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addressSettingsLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout addressSettingsBGPanelLayout = new javax.swing.GroupLayout(addressSettingsBGPanel);
        addressSettingsBGPanel.setLayout(addressSettingsBGPanelLayout);
        addressSettingsBGPanelLayout.setHorizontalGroup(
            addressSettingsBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addressSettingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addressSettingsBGPanelLayout.setVerticalGroup(
            addressSettingsBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addressSettingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        accountSettingsBGPanel.setBackground(new java.awt.Color(36, 25, 29));

        accountSettingsLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        accountSettingsLabel.setForeground(new java.awt.Color(255, 255, 255));
        accountSettingsLabel.setText("   Account settings ");
        accountSettingsLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        accountSettingsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accountSettingsLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                accountSettingsLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                accountSettingsLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout accountSettingsBGPanelLayout = new javax.swing.GroupLayout(accountSettingsBGPanel);
        accountSettingsBGPanel.setLayout(accountSettingsBGPanelLayout);
        accountSettingsBGPanelLayout.setHorizontalGroup(
            accountSettingsBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(accountSettingsBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(accountSettingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
        );
        accountSettingsBGPanelLayout.setVerticalGroup(
            accountSettingsBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(accountSettingsBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(accountSettingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
        );

        exitBGPanel.setBackground(new java.awt.Color(36, 25, 29));

        exitLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        exitLabel.setForeground(new java.awt.Color(255, 255, 255));
        exitLabel.setText("EXIT");
        exitLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitLabelMouseExited(evt);
            }
        });

        exitIcon.setIcon(new javax.swing.ImageIcon("C:\\Users\\meizz\\Downloads\\Pictures\\Exit icon.png")); // NOI18N

        javax.swing.GroupLayout exitBGPanelLayout = new javax.swing.GroupLayout(exitBGPanel);
        exitBGPanel.setLayout(exitBGPanelLayout);
        exitBGPanelLayout.setHorizontalGroup(
            exitBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitBGPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
            .addGroup(exitBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitBGPanelLayout.createSequentialGroup()
                    .addGap(0, 32, Short.MAX_VALUE)
                    .addComponent(exitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        exitBGPanelLayout.setVerticalGroup(
            exitBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitBGPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(exitBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(exitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewOrdersBGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(settingsBGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(personalInformationBGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addressSettingsBGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(accountSettingsBGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(exitBGPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addComponent(viewOrdersBGPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(settingsBGPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(personalInformationBGPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(addressSettingsBGPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(accountSettingsBGPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitBGPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        rightPanel.setLayout(new java.awt.CardLayout());

        viewOrdersCard.setBackground(new java.awt.Color(36, 25, 29));

        purchaseHistoryTextBGPanel.setBackground(new java.awt.Color(36, 25, 29));

        upperText.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        upperText.setForeground(new java.awt.Color(255, 255, 255));
        upperText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upperText.setText("Your order history includes the following products:");

        javax.swing.GroupLayout purchaseHistoryTextBGPanelLayout = new javax.swing.GroupLayout(purchaseHistoryTextBGPanel);
        purchaseHistoryTextBGPanel.setLayout(purchaseHistoryTextBGPanelLayout);
        purchaseHistoryTextBGPanelLayout.setHorizontalGroup(
            purchaseHistoryTextBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(upperText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        purchaseHistoryTextBGPanelLayout.setVerticalGroup(
            purchaseHistoryTextBGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, purchaseHistoryTextBGPanelLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(upperText)
                .addGap(20, 20, 20))
        );

        scrollPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        scrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        orderHistoryPanel.setBackground(new java.awt.Color(36, 25, 29));

        javax.swing.GroupLayout orderHistoryPanelLayout = new javax.swing.GroupLayout(orderHistoryPanel);
        orderHistoryPanel.setLayout(orderHistoryPanelLayout);
        orderHistoryPanelLayout.setHorizontalGroup(
            orderHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        orderHistoryPanelLayout.setVerticalGroup(
            orderHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 428, Short.MAX_VALUE)
        );

        scrollPanel.setViewportView(orderHistoryPanel);

        javax.swing.GroupLayout viewOrdersCardLayout = new javax.swing.GroupLayout(viewOrdersCard);
        viewOrdersCard.setLayout(viewOrdersCardLayout);
        viewOrdersCardLayout.setHorizontalGroup(
            viewOrdersCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(purchaseHistoryTextBGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollPanel)
        );
        viewOrdersCardLayout.setVerticalGroup(
            viewOrdersCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewOrdersCardLayout.createSequentialGroup()
                .addComponent(purchaseHistoryTextBGPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(scrollPanel))
        );

        rightPanel.add(viewOrdersCard, "card5");

        infoSettingsCard.setBackground(new java.awt.Color(36, 25, 29));
        infoSettingsCard.setPreferredSize(new java.awt.Dimension(352, 488));

        firstNameLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        firstNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        firstNameLabel.setText("First name");

        lastNameLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        lastNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        lastNameLabel.setText("Last name");

        contactNumberLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        contactNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        contactNumberLabel.setText("Contact number");

        saveChangesBGPanel1.setBackground(new java.awt.Color(85, 119, 141));

        saveChangesLabel1.setFont(new java.awt.Font("Barlow Medium", 0, 14)); // NOI18N
        saveChangesLabel1.setForeground(new java.awt.Color(255, 255, 255));
        saveChangesLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveChangesLabel1.setText("SAVE CHANGES  ");
        saveChangesLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveChangesLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveChangesLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveChangesLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveChangesLabel1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout saveChangesBGPanel1Layout = new javax.swing.GroupLayout(saveChangesBGPanel1);
        saveChangesBGPanel1.setLayout(saveChangesBGPanel1Layout);
        saveChangesBGPanel1Layout.setHorizontalGroup(
            saveChangesBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveChangesLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        saveChangesBGPanel1Layout.setVerticalGroup(
            saveChangesBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveChangesLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        firstNameField.setBackground(new java.awt.Color(36, 25, 29));
        firstNameField.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        firstNameField.setForeground(new java.awt.Color(255, 255, 255));
        firstNameField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        firstNameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                firstNameFieldMouseClicked(evt);
            }
        });
        firstNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                firstNameFieldKeyTyped(evt);
            }
        });

        lastNameField.setBackground(new java.awt.Color(36, 25, 29));
        lastNameField.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        lastNameField.setForeground(new java.awt.Color(255, 255, 255));
        lastNameField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        lastNameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lastNameFieldMouseClicked(evt);
            }
        });
        lastNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lastNameFieldKeyTyped(evt);
            }
        });

        contactNumberField.setBackground(new java.awt.Color(36, 25, 29));
        contactNumberField.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        contactNumberField.setForeground(new java.awt.Color(255, 255, 255));
        contactNumberField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        contactNumberField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contactNumberFieldMouseClicked(evt);
            }
        });
        contactNumberField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactNumberFieldKeyTyped(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 255, 204));

        jSeparator2.setForeground(new java.awt.Color(255, 255, 204));

        jSeparator3.setForeground(new java.awt.Color(255, 255, 204));

        upperText1.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        upperText1.setForeground(new java.awt.Color(255, 255, 255));
        upperText1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upperText1.setText("Enter a new value for the information you want to");

        upperText2.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        upperText2.setForeground(new java.awt.Color(255, 255, 255));
        upperText2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upperText2.setText("update.");

        errorInfoChangeLabel.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        errorInfoChangeLabel.setForeground(new java.awt.Color(255, 153, 102));
        errorInfoChangeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        errorInfoChangeLabel.setText("Enter text");

        javax.swing.GroupLayout infoSettingsCardLayout = new javax.swing.GroupLayout(infoSettingsCard);
        infoSettingsCard.setLayout(infoSettingsCardLayout);
        infoSettingsCardLayout.setHorizontalGroup(
            infoSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoSettingsCardLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(infoSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(upperText2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(upperText1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(infoSettingsCardLayout.createSequentialGroup()
                        .addGroup(infoSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameLabel)
                            .addComponent(contactNumberLabel)
                            .addComponent(lastNameLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoSettingsCardLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(infoSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorInfoChangeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveChangesBGPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(firstNameField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNameField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contactNumberField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(20, 20, 20))
        );
        infoSettingsCardLayout.setVerticalGroup(
            infoSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoSettingsCardLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(upperText1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upperText2)
                .addGap(30, 30, 30)
                .addComponent(firstNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(lastNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(contactNumberLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contactNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(errorInfoChangeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveChangesBGPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        rightPanel.add(infoSettingsCard, "card3");

        addressSettingsCard.setBackground(new java.awt.Color(36, 25, 29));
        addressSettingsCard.setPreferredSize(new java.awt.Dimension(352, 488));

        upperText3.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        upperText3.setForeground(new java.awt.Color(255, 255, 255));
        upperText3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upperText3.setText("Enter a new value for the information you want to");

        upperText4.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        upperText4.setForeground(new java.awt.Color(255, 255, 255));
        upperText4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upperText4.setText("update.");

        completeAddressLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        completeAddressLabel.setForeground(new java.awt.Color(255, 255, 255));
        completeAddressLabel.setText("Street address");

        completeAddressField.setBackground(new java.awt.Color(36, 25, 29));
        completeAddressField.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        completeAddressField.setForeground(new java.awt.Color(255, 255, 255));
        completeAddressField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        completeAddressField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                completeAddressFieldMouseClicked(evt);
            }
        });
        completeAddressField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                completeAddressFieldKeyTyped(evt);
            }
        });

        jSeparator4.setForeground(new java.awt.Color(255, 255, 204));

        barangayLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        barangayLabel.setForeground(new java.awt.Color(255, 255, 255));
        barangayLabel.setText("Barangay address");

        barangayAddress.setBackground(new java.awt.Color(105, 91, 96));
        barangayAddress.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        barangayAddress.setForeground(new java.awt.Color(255, 255, 255));
        barangayAddress.setMaximumRowCount(19);
        barangayAddress.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Agnaya", "Bagong Silang", "Banga 1st", "Banga 2nd", "Bintog", "Bulihan", "Culianin", "Dampol", "Lagundi", "Lalangan", "Lumang Bayan", "Parulan", "Poblacion", "Rueda", "San Jose", "Santa Ines", "Santo NiÃ±o", "Sipat", "Tabang" }));
        barangayAddress.setBorder(null);
        barangayAddress.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        barangayAddress.setOpaque(true);
        barangayAddress.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                barangayAddressItemStateChanged(evt);
            }
        });

        jSeparator7.setForeground(new java.awt.Color(255, 255, 204));

        saveChangesBGPanel2.setBackground(new java.awt.Color(85, 119, 141));

        saveChangesLabel2.setFont(new java.awt.Font("Barlow Medium", 0, 14)); // NOI18N
        saveChangesLabel2.setForeground(new java.awt.Color(255, 255, 255));
        saveChangesLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveChangesLabel2.setText("SAVE CHANGES  ");
        saveChangesLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveChangesLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveChangesLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveChangesLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveChangesLabel2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout saveChangesBGPanel2Layout = new javax.swing.GroupLayout(saveChangesBGPanel2);
        saveChangesBGPanel2.setLayout(saveChangesBGPanel2Layout);
        saveChangesBGPanel2Layout.setHorizontalGroup(
            saveChangesBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveChangesLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
        );
        saveChangesBGPanel2Layout.setVerticalGroup(
            saveChangesBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveChangesLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        addressChangeLabel.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        addressChangeLabel.setForeground(new java.awt.Color(255, 153, 102));
        addressChangeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        addressChangeLabel.setText("Enter text");

        javax.swing.GroupLayout addressSettingsCardLayout = new javax.swing.GroupLayout(addressSettingsCard);
        addressSettingsCard.setLayout(addressSettingsCardLayout);
        addressSettingsCardLayout.setHorizontalGroup(
            addressSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addressSettingsCardLayout.createSequentialGroup()
                .addGroup(addressSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addressSettingsCardLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addressChangeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addressSettingsCardLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(addressSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(barangayAddress, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(upperText4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(upperText3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator4)
                            .addComponent(jSeparator7)
                            .addComponent(completeAddressField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(addressSettingsCardLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(saveChangesBGPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addressSettingsCardLayout.createSequentialGroup()
                                .addGroup(addressSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(completeAddressLabel)
                                    .addComponent(barangayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(20, 20, 20))
        );
        addressSettingsCardLayout.setVerticalGroup(
            addressSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressSettingsCardLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(upperText3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upperText4)
                .addGap(30, 30, 30)
                .addComponent(completeAddressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(completeAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(barangayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barangayAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addComponent(addressChangeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveChangesBGPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        rightPanel.add(addressSettingsCard, "card3");

        accountSettingsCard.setBackground(new java.awt.Color(36, 25, 29));
        accountSettingsCard.setPreferredSize(new java.awt.Dimension(352, 488));

        upperText5.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        upperText5.setForeground(new java.awt.Color(255, 255, 255));
        upperText5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upperText5.setText("Enter a new value for the information you want to");

        upperText6.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 14)); // NOI18N
        upperText6.setForeground(new java.awt.Color(255, 255, 255));
        upperText6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upperText6.setText("update.");

        emailAddressLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        emailAddressLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailAddressLabel.setText("Email address");

        emailAddressField.setBackground(new java.awt.Color(36, 25, 29));
        emailAddressField.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        emailAddressField.setForeground(new java.awt.Color(255, 255, 255));
        emailAddressField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        emailAddressField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emailAddressFieldMouseClicked(evt);
            }
        });
        emailAddressField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emailAddressFieldKeyTyped(evt);
            }
        });

        jSeparator5.setForeground(new java.awt.Color(255, 255, 204));

        currentPasswordLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        currentPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        currentPasswordLabel.setText("Current password");

        currentPasswordField.setBackground(new java.awt.Color(36, 25, 29));
        currentPasswordField.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        currentPasswordField.setForeground(new java.awt.Color(255, 255, 255));
        currentPasswordField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        currentPasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                currentPasswordFieldMouseClicked(evt);
            }
        });
        currentPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                currentPasswordFieldKeyTyped(evt);
            }
        });

        jSeparator8.setForeground(new java.awt.Color(255, 255, 204));

        newPasswordLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        newPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        newPasswordLabel.setText("New password");

        newPasswordField.setBackground(new java.awt.Color(36, 25, 29));
        newPasswordField.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        newPasswordField.setForeground(new java.awt.Color(255, 255, 255));
        newPasswordField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        newPasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newPasswordFieldMouseClicked(evt);
            }
        });
        newPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newPasswordFieldKeyTyped(evt);
            }
        });

        jSeparator9.setForeground(new java.awt.Color(255, 255, 204));

        confirmPasswordLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
        confirmPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        confirmPasswordLabel.setText("Confirm password");

        confirmPasswordField.setBackground(new java.awt.Color(36, 25, 29));
        confirmPasswordField.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        confirmPasswordField.setForeground(new java.awt.Color(255, 255, 255));
        confirmPasswordField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        confirmPasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmPasswordFieldMouseClicked(evt);
            }
        });
        confirmPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                confirmPasswordFieldKeyTyped(evt);
            }
        });

        jSeparator10.setForeground(new java.awt.Color(255, 255, 204));

        errorAccountChangeLabel.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        errorAccountChangeLabel.setForeground(new java.awt.Color(255, 153, 102));
        errorAccountChangeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        errorAccountChangeLabel.setText("Enter text");

        saveChangesBGPanel3.setBackground(new java.awt.Color(85, 119, 141));

        saveChangesLabel3.setFont(new java.awt.Font("Barlow Medium", 0, 14)); // NOI18N
        saveChangesLabel3.setForeground(new java.awt.Color(255, 255, 255));
        saveChangesLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveChangesLabel3.setText("SAVE CHANGES  ");
        saveChangesLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveChangesLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveChangesLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveChangesLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveChangesLabel3MouseExited(evt);
            }
        });

        javax.swing.GroupLayout saveChangesBGPanel3Layout = new javax.swing.GroupLayout(saveChangesBGPanel3);
        saveChangesBGPanel3.setLayout(saveChangesBGPanel3Layout);
        saveChangesBGPanel3Layout.setHorizontalGroup(
            saveChangesBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveChangesLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
        );
        saveChangesBGPanel3Layout.setVerticalGroup(
            saveChangesBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveChangesLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        passwordPeekBGPanel1.setLayout(new java.awt.CardLayout());

        firstBGPanel1.setBackground(new java.awt.Color(36, 25, 29));

        showLabel1.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        showLabel1.setForeground(new java.awt.Color(255, 255, 255));
        showLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        showLabel1.setText("Show");
        showLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout firstBGPanel1Layout = new javax.swing.GroupLayout(firstBGPanel1);
        firstBGPanel1.setLayout(firstBGPanel1Layout);
        firstBGPanel1Layout.setHorizontalGroup(
            firstBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(firstBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(firstBGPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(showLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        firstBGPanel1Layout.setVerticalGroup(
            firstBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
            .addGroup(firstBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(firstBGPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(showLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        passwordPeekBGPanel1.add(firstBGPanel1, "card2");

        secondBGPanel1.setBackground(new java.awt.Color(36, 25, 29));

        hideLabel1.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        hideLabel1.setForeground(new java.awt.Color(255, 255, 255));
        hideLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        hideLabel1.setText("Hide");
        hideLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout secondBGPanel1Layout = new javax.swing.GroupLayout(secondBGPanel1);
        secondBGPanel1.setLayout(secondBGPanel1Layout);
        secondBGPanel1Layout.setHorizontalGroup(
            secondBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(secondBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(secondBGPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hideLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        secondBGPanel1Layout.setVerticalGroup(
            secondBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
            .addGroup(secondBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(secondBGPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hideLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        passwordPeekBGPanel1.add(secondBGPanel1, "card3");

        thirdBGPanel1.setBackground(new java.awt.Color(36, 25, 29));

        emptyLabel1.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        emptyLabel1.setForeground(new java.awt.Color(255, 255, 255));
        emptyLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        javax.swing.GroupLayout thirdBGPanel1Layout = new javax.swing.GroupLayout(thirdBGPanel1);
        thirdBGPanel1.setLayout(thirdBGPanel1Layout);
        thirdBGPanel1Layout.setHorizontalGroup(
            thirdBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(thirdBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(thirdBGPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(emptyLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        thirdBGPanel1Layout.setVerticalGroup(
            thirdBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
            .addGroup(thirdBGPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(thirdBGPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(emptyLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        passwordPeekBGPanel1.add(thirdBGPanel1, "card4");

        passwordPeekBGPanel2.setPreferredSize(new java.awt.Dimension(36, 19));
        passwordPeekBGPanel2.setLayout(new java.awt.CardLayout());

        firstBGPanel2.setBackground(new java.awt.Color(36, 25, 29));

        showLabel2.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        showLabel2.setForeground(new java.awt.Color(255, 255, 255));
        showLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        showLabel2.setText("Show");
        showLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout firstBGPanel2Layout = new javax.swing.GroupLayout(firstBGPanel2);
        firstBGPanel2.setLayout(firstBGPanel2Layout);
        firstBGPanel2Layout.setHorizontalGroup(
            firstBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(firstBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(firstBGPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(showLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        firstBGPanel2Layout.setVerticalGroup(
            firstBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
            .addGroup(firstBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(firstBGPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(showLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        passwordPeekBGPanel2.add(firstBGPanel2, "card2");

        secondBGPanel2.setBackground(new java.awt.Color(36, 25, 29));

        hideLabel2.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        hideLabel2.setForeground(new java.awt.Color(255, 255, 255));
        hideLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        hideLabel2.setText("Hide");
        hideLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout secondBGPanel2Layout = new javax.swing.GroupLayout(secondBGPanel2);
        secondBGPanel2.setLayout(secondBGPanel2Layout);
        secondBGPanel2Layout.setHorizontalGroup(
            secondBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(secondBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(secondBGPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hideLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        secondBGPanel2Layout.setVerticalGroup(
            secondBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
            .addGroup(secondBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(secondBGPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hideLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        passwordPeekBGPanel2.add(secondBGPanel2, "card3");

        thirdBGPanel2.setBackground(new java.awt.Color(36, 25, 29));

        emptyLabel2.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        emptyLabel2.setForeground(new java.awt.Color(255, 255, 255));
        emptyLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        javax.swing.GroupLayout thirdBGPanel2Layout = new javax.swing.GroupLayout(thirdBGPanel2);
        thirdBGPanel2.setLayout(thirdBGPanel2Layout);
        thirdBGPanel2Layout.setHorizontalGroup(
            thirdBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(thirdBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(thirdBGPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(emptyLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        thirdBGPanel2Layout.setVerticalGroup(
            thirdBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
            .addGroup(thirdBGPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(thirdBGPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(emptyLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        passwordPeekBGPanel2.add(thirdBGPanel2, "card4");

        passwordPeekBGPanel3.setLayout(new java.awt.CardLayout());

        firstBGPanel3.setBackground(new java.awt.Color(36, 25, 29));

        showLabel3.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        showLabel3.setForeground(new java.awt.Color(255, 255, 255));
        showLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        showLabel3.setText("Show");
        showLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout firstBGPanel3Layout = new javax.swing.GroupLayout(firstBGPanel3);
        firstBGPanel3.setLayout(firstBGPanel3Layout);
        firstBGPanel3Layout.setHorizontalGroup(
            firstBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(firstBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(firstBGPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(showLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        firstBGPanel3Layout.setVerticalGroup(
            firstBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
            .addGroup(firstBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(firstBGPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(showLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        passwordPeekBGPanel3.add(firstBGPanel3, "card2");

        secondBGPanel3.setBackground(new java.awt.Color(36, 25, 29));

        hideLabel3.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        hideLabel3.setForeground(new java.awt.Color(255, 255, 255));
        hideLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        hideLabel3.setText("Hide");
        hideLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout secondBGPanel3Layout = new javax.swing.GroupLayout(secondBGPanel3);
        secondBGPanel3.setLayout(secondBGPanel3Layout);
        secondBGPanel3Layout.setHorizontalGroup(
            secondBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(secondBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(secondBGPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hideLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        secondBGPanel3Layout.setVerticalGroup(
            secondBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
            .addGroup(secondBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(secondBGPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hideLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        passwordPeekBGPanel3.add(secondBGPanel3, "card3");

        thirdBGPanel3.setBackground(new java.awt.Color(36, 25, 29));

        emptyLabel3.setFont(new java.awt.Font("Avenir Light", 0, 12)); // NOI18N
        emptyLabel3.setForeground(new java.awt.Color(255, 255, 255));
        emptyLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        javax.swing.GroupLayout thirdBGPanel3Layout = new javax.swing.GroupLayout(thirdBGPanel3);
        thirdBGPanel3.setLayout(thirdBGPanel3Layout);
        thirdBGPanel3Layout.setHorizontalGroup(
            thirdBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(thirdBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(thirdBGPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(emptyLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        thirdBGPanel3Layout.setVerticalGroup(
            thirdBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
            .addGroup(thirdBGPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(thirdBGPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(emptyLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        passwordPeekBGPanel3.add(thirdBGPanel3, "card4");

        javax.swing.GroupLayout accountSettingsCardLayout = new javax.swing.GroupLayout(accountSettingsCard);
        accountSettingsCard.setLayout(accountSettingsCardLayout);
        accountSettingsCardLayout.setHorizontalGroup(
            accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountSettingsCardLayout.createSequentialGroup()
                .addGroup(accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(accountSettingsCardLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(saveChangesBGPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(errorAccountChangeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(accountSettingsCardLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailAddressField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(upperText6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(upperText5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountSettingsCardLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(accountSettingsCardLayout.createSequentialGroup()
                                        .addComponent(confirmPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(passwordPeekBGPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator10)))
                            .addGroup(accountSettingsCardLayout.createSequentialGroup()
                                .addComponent(currentPasswordLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(accountSettingsCardLayout.createSequentialGroup()
                                .addComponent(currentPasswordField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordPeekBGPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(accountSettingsCardLayout.createSequentialGroup()
                                .addGroup(accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(accountSettingsCardLayout.createSequentialGroup()
                                        .addGroup(accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(confirmPasswordLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(emailAddressLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(newPasswordLabel, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(newPasswordField, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordPeekBGPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20))
        );
        accountSettingsCardLayout.setVerticalGroup(
            accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountSettingsCardLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(upperText5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upperText6)
                .addGap(30, 30, 30)
                .addComponent(emailAddressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(currentPasswordLabel)
                .addGroup(accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(currentPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordPeekBGPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(newPasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordPeekBGPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(accountSettingsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountSettingsCardLayout.createSequentialGroup()
                        .addComponent(confirmPasswordLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(passwordPeekBGPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(errorAccountChangeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveChangesBGPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        rightPanel.add(accountSettingsCard, "card3");

        backmostPanel.setLayer(leftPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        backmostPanel.setLayer(rightPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout backmostPanelLayout = new javax.swing.GroupLayout(backmostPanel);
        backmostPanel.setLayout(backmostPanelLayout);
        backmostPanelLayout.setHorizontalGroup(
            backmostPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backmostPanelLayout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
        );
        backmostPanelLayout.setVerticalGroup(
            backmostPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backmostPanel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backmostPanel)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void viewOrdersLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewOrdersLabelMouseClicked
        // TODO add your handling code here:
        isCardClicked[0] = true;
        removeHighlightedPanelBG(0);
        Colour.setToCartItemColor(viewOrdersBGPanel, "entered");
        Card.changeCard(rightPanel, viewOrdersCard);
        orderHistoryPanel.removeAll();
        var resultSet = Database_Transaction.retrievePurchasedOrder(connection);
        createOrderPanel(resultSet);
    }//GEN-LAST:event_viewOrdersLabelMouseClicked

    private void viewOrdersLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewOrdersLabelMouseEntered
        // TODO add your handling code here:
        Colour.setToCartItemColor(viewOrdersBGPanel, "entered");
    }//GEN-LAST:event_viewOrdersLabelMouseEntered

    private void viewOrdersLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewOrdersLabelMouseExited
        // TODO add your handling code here:
        if (isCardClicked[0] == false)
            Colour.setToCartItemColor(viewOrdersBGPanel, "exited");
    }//GEN-LAST:event_viewOrdersLabelMouseExited

    private void personalInformationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personalInformationLabelMouseClicked
        // TODO add your handling code here:
        isCardClicked[1] = true;
        removeHighlightedPanelBG(1);
        errorInfoChangeLabel.setText(blankText);
        firstNameField.setText(Database_Transaction.retrieveFirstName(connection));
        lastNameField.setText(Database_Transaction.retrieveLastName(connection));
        contactNumberField.setText(Database_Transaction.retrieveContactNumber(connection));
        Card.changeCard(rightPanel, infoSettingsCard);
    }//GEN-LAST:event_personalInformationLabelMouseClicked

    private void personalInformationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personalInformationLabelMouseEntered
        // TODO add your handling code here:
        Colour.setToCartItemColor(personalInformationBGPanel, "entered");
    }//GEN-LAST:event_personalInformationLabelMouseEntered

    private void personalInformationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personalInformationLabelMouseExited
        // TODO add your handling code here:
        if (isCardClicked[1] == false)
            Colour.setToCartItemColor(personalInformationBGPanel, "exited");
    }//GEN-LAST:event_personalInformationLabelMouseExited

    private void addressSettingsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addressSettingsLabelMouseClicked
        // TODO add your handling code here:
        isCardClicked[2] = true;
        removeHighlightedPanelBG(2);
        addressChangeLabel.setText(blankText);
        completeAddressField.setText(Database_Transaction.retrieveStreetAddress(connection));
        barangayAddress.setSelectedItem(Database_Transaction.retrieveBarangayAddress(connection));
        Card.changeCard(rightPanel, addressSettingsCard);
    }//GEN-LAST:event_addressSettingsLabelMouseClicked

    private void addressSettingsLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addressSettingsLabelMouseEntered
        // TODO add your handling code here:
        Colour.setToCartItemColor(addressSettingsBGPanel, "entered");
    }//GEN-LAST:event_addressSettingsLabelMouseEntered

    private void addressSettingsLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addressSettingsLabelMouseExited
        // TODO add your handling code here:
        if (isCardClicked[2] == false)
            Colour.setToCartItemColor(addressSettingsBGPanel, "exited");
    }//GEN-LAST:event_addressSettingsLabelMouseExited

    private void accountSettingsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountSettingsLabelMouseClicked
        // TODO add your handling code here:
        isCardClicked[3] = true;
        removeHighlightedPanelBG(3);
        errorAccountChangeLabel.setText(blankText);
        emailAddressField.setText(Database_Transaction.retrieveEmailAddress(connection));
        Card.changeCard(rightPanel, accountSettingsCard);
        if (new String(currentPasswordField.getPassword()).isBlank())
            Card.changeCard(passwordPeekBGPanel1, thirdBGPanel1);
        else
            Password.hidePassword(passwordPeekBGPanel1, firstBGPanel1, currentPasswordField);
        if (new String(newPasswordField.getPassword()).isBlank())
            Card.changeCard(passwordPeekBGPanel2, thirdBGPanel2);
        else
            Password.hidePassword(passwordPeekBGPanel2, firstBGPanel2, newPasswordField);
        if (new String(confirmPasswordField.getPassword()).isBlank())
            Card.changeCard(passwordPeekBGPanel3, thirdBGPanel3);
        else
            Password.hidePassword(passwordPeekBGPanel3, firstBGPanel3, confirmPasswordField);
        errorAccountChangeLabel.setText(blankText);
    }//GEN-LAST:event_accountSettingsLabelMouseClicked

    private void accountSettingsLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountSettingsLabelMouseEntered
        // TODO add your handling code here:
        Colour.setToCartItemColor(accountSettingsBGPanel, "entered");
    }//GEN-LAST:event_accountSettingsLabelMouseEntered

    private void accountSettingsLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountSettingsLabelMouseExited
        // TODO add your handling code here:
        if (isCardClicked[3] == false)
            Colour.setToCartItemColor(accountSettingsBGPanel, "exited");
    }//GEN-LAST:event_accountSettingsLabelMouseExited

    private void exitLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseClicked
        // TODO add your handling code here:
        Frame.exitFrame(this);
    }//GEN-LAST:event_exitLabelMouseClicked

    private void exitLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseEntered
        // TODO add your handling code here:
        Colour.setToCartItemColor(exitBGPanel, "entered");
    }//GEN-LAST:event_exitLabelMouseEntered

    private void exitLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseExited
        // TODO add your handling code here:
        Colour.setToCartItemColor(exitBGPanel, "exited");
    }//GEN-LAST:event_exitLabelMouseExited

    private void newPasswordFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPasswordFieldKeyTyped
        // TODO add your handling code here:
        iFieldValueUpdated[2][2] = true;
        if (doesUpdateFail[2] == true) {
            if (iFieldValueUpdated[2][0] == true)
                iFieldValueUpdated[2][0] = false;
        }
        var passwordCardPanels = new JPanel[]{firstBGPanel2, secondBGPanel2, thirdBGPanel2};
        documentListener(passwordPeekBGPanel2, passwordCardPanels, newPasswordField, 4);
        errorAccountChangeLabel.setText(blankText);
    }//GEN-LAST:event_newPasswordFieldKeyTyped

    private void hideLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideLabel2MouseClicked
        // TODO add your handling code here:
        Password.hidePassword(passwordPeekBGPanel2, firstBGPanel2, newPasswordField);
        Validate.setBooleanPasswordPeek(false, 4);
    }//GEN-LAST:event_hideLabel2MouseClicked

    private void showLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showLabel2MouseClicked
        // TODO add your handling code here:
        Password.showPassword(passwordPeekBGPanel2, secondBGPanel2, newPasswordField);
        Validate.setBooleanPasswordPeek(true, 4);
    }//GEN-LAST:event_showLabel2MouseClicked

    private void currentPasswordFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_currentPasswordFieldKeyTyped
        // TODO add your handling code here:
        iFieldValueUpdated[2][1] = true;
        if (doesUpdateFail[2] == true) {
            if (iFieldValueUpdated[2][0] == true)
                iFieldValueUpdated[2][0] = false;
        }
        var passwordCardPanels = new JPanel[]{firstBGPanel1, secondBGPanel1, thirdBGPanel1};
        documentListener(passwordPeekBGPanel1, passwordCardPanels, currentPasswordField, 3);
        errorAccountChangeLabel.setText(blankText);
    }//GEN-LAST:event_currentPasswordFieldKeyTyped

    private void hideLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideLabel1MouseClicked
        // TODO add your handling code here:
        Password.hidePassword(passwordPeekBGPanel1, firstBGPanel1, currentPasswordField);
        Validate.setBooleanPasswordPeek(false, 3);
    }//GEN-LAST:event_hideLabel1MouseClicked

    private void showLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showLabel1MouseClicked
        // TODO add your handling code here:
        Password.showPassword(passwordPeekBGPanel1, secondBGPanel1, currentPasswordField);
        Validate.setBooleanPasswordPeek(true, 3);
    }//GEN-LAST:event_showLabel1MouseClicked

    private void confirmPasswordFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmPasswordFieldKeyTyped
        // TODO add your handling code here:
        iFieldValueUpdated[2][3] = true;
        if (doesUpdateFail[2] == true) {
            if (iFieldValueUpdated[2][0] == true)
                iFieldValueUpdated[2][0] = false;
        }
        var passwordCardPanels = new JPanel[]{firstBGPanel3, secondBGPanel3, thirdBGPanel3};
        documentListener(passwordPeekBGPanel3, passwordCardPanels, confirmPasswordField, 5);
        errorAccountChangeLabel.setText(blankText);
    }//GEN-LAST:event_confirmPasswordFieldKeyTyped

    private void hideLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideLabel3MouseClicked
        // TODO add your handling code here:
        Password.hidePassword(passwordPeekBGPanel3, firstBGPanel3, confirmPasswordField);
        Validate.setBooleanPasswordPeek(false, 5);
    }//GEN-LAST:event_hideLabel3MouseClicked

    private void showLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showLabel3MouseClicked
        // TODO add your handling code here:
        Password.showPassword(passwordPeekBGPanel3, secondBGPanel3, confirmPasswordField);
        Validate.setBooleanPasswordPeek(true, 5);
    }//GEN-LAST:event_showLabel3MouseClicked

    private void firstNameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstNameFieldMouseClicked
        // TODO add your handling code here:
        errorInfoChangeLabel.setText(blankText);    
    }//GEN-LAST:event_firstNameFieldMouseClicked

    private void lastNameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastNameFieldMouseClicked
        // TODO add your handling code here:
        errorInfoChangeLabel.setText(blankText);
    }//GEN-LAST:event_lastNameFieldMouseClicked

    private void contactNumberFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactNumberFieldMouseClicked
        // TODO add your handling code here:
        errorInfoChangeLabel.setText(blankText);
    }//GEN-LAST:event_contactNumberFieldMouseClicked

    private void completeAddressFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_completeAddressFieldMouseClicked
        // TODO add your handling code here:
        addressChangeLabel.setText(blankText);
    }//GEN-LAST:event_completeAddressFieldMouseClicked

    private void emailAddressFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailAddressFieldMouseClicked
        // TODO add your handling code here:
        errorAccountChangeLabel.setText(blankText);
    }//GEN-LAST:event_emailAddressFieldMouseClicked

    private void firstNameFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameFieldKeyTyped
        // TODO add your handling code here:
        iFieldValueUpdated[0][0] = true;
        if (doesUpdateFail[0] == true) {
            if (iFieldValueUpdated[0][1] == true)
                iFieldValueUpdated[0][1] = false;
            if (iFieldValueUpdated[0][2] == true)
                iFieldValueUpdated[0][2] = false;
        }
        errorInfoChangeLabel.setText(blankText);
    }//GEN-LAST:event_firstNameFieldKeyTyped

    private void lastNameFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameFieldKeyTyped
        // TODO add your handling code here:
        iFieldValueUpdated[0][1] = true;
        if (doesUpdateFail[0] == true) {
            if (iFieldValueUpdated[0][0] == true)
                iFieldValueUpdated[0][0] = false;
            if (iFieldValueUpdated[0][2] == true)
                iFieldValueUpdated[0][2] = false;
        }
        errorInfoChangeLabel.setText(blankText);
    }//GEN-LAST:event_lastNameFieldKeyTyped

    private void contactNumberFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactNumberFieldKeyTyped
        // TODO add your handling code here:
        iFieldValueUpdated[0][2] = true;
        if (doesUpdateFail[0] == true) {
            if (iFieldValueUpdated[0][0] == true)
                iFieldValueUpdated[0][0] = false;
            if (iFieldValueUpdated[0][1] == true)
                iFieldValueUpdated[0][1] = false;
        }
        errorInfoChangeLabel.setText(blankText);
    }//GEN-LAST:event_contactNumberFieldKeyTyped

    private void completeAddressFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_completeAddressFieldKeyTyped
        // TODO add your handling code here:
        iFieldValueUpdated[1][0] = true;
        if (doesUpdateFail[1] == true) {
            if (iFieldValueUpdated[1][1] == true)
                iFieldValueUpdated[1][1] = false;
        }
        addressChangeLabel.setText(blankText);
    }//GEN-LAST:event_completeAddressFieldKeyTyped

    private void emailAddressFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailAddressFieldKeyTyped
        // TODO add your handling code here:
        iFieldValueUpdated[2][0] = true;
        if (doesUpdateFail[2] == true) {
            for (int i = 0; i < 4; ++i) {
                if ((!(i == 0)) && (iFieldValueUpdated[2][i] == true))
                    iFieldValueUpdated[2][i] = false;
            }
        }
        errorAccountChangeLabel.setText(blankText);
    }//GEN-LAST:event_emailAddressFieldKeyTyped

    private void currentPasswordFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_currentPasswordFieldMouseClicked
        // TODO add your handling code here:
        errorAccountChangeLabel.setText(blankText);
    }//GEN-LAST:event_currentPasswordFieldMouseClicked

    private void newPasswordFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPasswordFieldMouseClicked
        // TODO add your handling code here:
        errorAccountChangeLabel.setText(blankText);
    }//GEN-LAST:event_newPasswordFieldMouseClicked

    private void confirmPasswordFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPasswordFieldMouseClicked
        // TODO add your handling code here:
        errorAccountChangeLabel.setText(blankText);
    }//GEN-LAST:event_confirmPasswordFieldMouseClicked

    private void barangayAddressItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_barangayAddressItemStateChanged
        // TODO add your handling code here:
        addressChangeLabel.setText(blankText);
        iFieldValueUpdated[1][1] = true;
        if (doesUpdateFail[1] == true) {
            if (iFieldValueUpdated[1][0] == true)
                iFieldValueUpdated[1][0] = false;
        }
    }//GEN-LAST:event_barangayAddressItemStateChanged

    private void saveChangesLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesLabel1MouseClicked
        // TODO add your handling code here:
        validatePersonalInfo();
    }//GEN-LAST:event_saveChangesLabel1MouseClicked

    private void saveChangesLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesLabel1MouseEntered
        // TODO add your handling code here:
        Colour.setToSecondaryButtonColor(saveChangesBGPanel1, "entered");
    }//GEN-LAST:event_saveChangesLabel1MouseEntered

    private void saveChangesLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesLabel1MouseExited
        // TODO add your handling code here:
        Colour.setToSecondaryButtonColor(saveChangesBGPanel1, "entered");
    }//GEN-LAST:event_saveChangesLabel1MouseExited

    private void saveChangesLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesLabel2MouseClicked
        // TODO add your handling code here:
        validateAddressInfo();
    }//GEN-LAST:event_saveChangesLabel2MouseClicked

    private void saveChangesLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesLabel2MouseEntered
        // TODO add your handling code here:
        Colour.setToSecondaryButtonColor(saveChangesBGPanel2, "entered");
    }//GEN-LAST:event_saveChangesLabel2MouseEntered

    private void saveChangesLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesLabel2MouseExited
        // TODO add your handling code here:
        Colour.setToSecondaryButtonColor(saveChangesBGPanel2, "exited");
    }//GEN-LAST:event_saveChangesLabel2MouseExited

    private void saveChangesLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesLabel3MouseClicked
        // TODO add your handling code here:
        validateAccountInfo();
    }//GEN-LAST:event_saveChangesLabel3MouseClicked

    private void saveChangesLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesLabel3MouseEntered
        // TODO add your handling code here:
        Colour.setToSecondaryButtonColor(saveChangesBGPanel3, "entered");
    }//GEN-LAST:event_saveChangesLabel3MouseEntered

    private void saveChangesLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveChangesLabel3MouseExited
        // TODO add your handling code here:
        Colour.setToSecondaryButtonColor(saveChangesBGPanel3, "exited");
    }//GEN-LAST:event_saveChangesLabel3MouseExited
    
    private void removeHighlightedPanelBG(int index) {
        var arrayOfMenuPanel = new JPanel[]{viewOrdersBGPanel, personalInformationBGPanel,
                                            addressSettingsBGPanel, accountSettingsBGPanel};
        for (int i = 0; i < 4; ++i) {
            if (!(i == index)) {
               isCardClicked[i] = false;
               Colour.setToCartItemColor(arrayOfMenuPanel[i], "exited");
            }      
        }
    }
    
    private void validatePersonalInfo() {
        if (((iFieldValueUpdated[0][0] == true) && (iFieldValueUpdated[0][1] == true)) ||
            ((iFieldValueUpdated[0][0] == true) && (iFieldValueUpdated[0][2] == true)) ||
            ((iFieldValueUpdated[0][1] == true) && (iFieldValueUpdated[0][2] == true))) {
            errorInfoChangeLabel.setText("You can only update 1 field at a time.");
            doesUpdateFail[0] = true;
        }
        else if (iFieldValueUpdated[0][0] == true)
            checkFirstName();
        else if (iFieldValueUpdated[0][1] == true)
            checkLastName();
        else if (iFieldValueUpdated[0][2] == true)
            checkContactNumber();
        else
            errorInfoChangeLabel.setText("Update operation has failed.");
    }
    
    private void checkFirstName() {
        String newFirstName = firstNameField.getText().trim();
        String currentFirstName = Database_Transaction.retrieveFirstName(connection);
        if (!(newFirstName.isBlank())) {
            if (!(currentFirstName.equalsIgnoreCase(newFirstName))) {
                if (Validate.validateName(newFirstName) == false)
                    errorInfoChangeLabel.setText("Invalid first name.");
                else {
                    errorInfoChangeLabel.setText("Successfully changed first name.");
                    Database_Transaction.updateName(connection, newFirstName, "first name");
                }
            }
            else
                errorInfoChangeLabel.setText("No changes detected for first name.");
        }
        else {
            firstNameField.setText(currentFirstName);
            errorInfoChangeLabel.setText("No changes applied for first name.");
        }
    }
    
    private void checkLastName() {
        String newLastName = lastNameField.getText().trim();
        String currentLastName = Database_Transaction.retrieveLastName(connection);
        if (!(newLastName.isBlank())) {
            if (!(currentLastName.equalsIgnoreCase(newLastName))) {
                if (Validate.validateName(newLastName) == false)
                    errorInfoChangeLabel.setText("Invalid last name.");
                else {
                    errorInfoChangeLabel.setText("Successfully changed last name.");
                    Database_Transaction.updateName(connection, newLastName, "last name");
                }
            }
            else
                errorInfoChangeLabel.setText("No changes detected for last name.");
        }
        else {
            lastNameField.setText(currentLastName);
            errorInfoChangeLabel.setText("No changes applied for last name.");
        }
    }
    
    private void checkContactNumber() {
        String newContactNumber = contactNumberField.getText().trim();
        String currentContactNumber = Database_Transaction.retrieveContactNumber(connection);
        if (!(newContactNumber.isBlank())) {
            if (!(currentContactNumber.equals(newContactNumber))) {
                if (Validate.validateContactNumber(newContactNumber) == false)
                    errorInfoChangeLabel.setText("Invalid contact number.");
                else {
                    errorInfoChangeLabel.setText("Successfully changed contact number.");
                    Database_Transaction.updateContactNumber(connection, newContactNumber);
                }
            }
            else
                errorInfoChangeLabel.setText("No changes detected for contact number.");
        }
        else {
            contactNumberField.setText(currentContactNumber);
            errorInfoChangeLabel.setText("No changes applied for contact number.");
        }
    }
    
    private void validateAddressInfo() {
        if ((iFieldValueUpdated[1][0] == true) && (iFieldValueUpdated[1][1] == true)) {
            addressChangeLabel.setText("You can only update 1 field at a time.");
            doesUpdateFail[1] = true;
        }
            
        else if (iFieldValueUpdated[1][0] == true)
            checkStreetAddress();
        else if (iFieldValueUpdated[1][1] == true)
            checkBarangayAddress();
        else
            addressChangeLabel.setText("Update operation has failed.");
    }
    
    private void checkStreetAddress() {
        String newStreetAddress = completeAddressField.getText().trim();
        String currentStreetAddress = Database_Transaction.retrieveStreetAddress(connection);
        if (!(newStreetAddress.isBlank())) {
            if (!(newStreetAddress.equalsIgnoreCase(currentStreetAddress))) {
                addressChangeLabel.setText("Successfully changed street address.");
                Database_Transaction.updateAddress(connection, completeAddressField, barangayAddress, "complete address");
            }
           else
                addressChangeLabel.setText("No changes detected for street address.");
        }
        else {
            completeAddressField.setText(currentStreetAddress);
            addressChangeLabel.setText("No changes applied for street address.");
        }
    }
   
    private void checkBarangayAddress() {
        String newBarangayAddress = barangayAddress.getSelectedItem().toString();
        String currentBarangayAddress = Database_Transaction.retrieveBarangayAddress(connection);
        if (!(newBarangayAddress.equalsIgnoreCase(currentBarangayAddress))) {
            addressChangeLabel.setText("Successfully changed barangay address.");
            Database_Transaction.updateAddress(connection, completeAddressField, barangayAddress, "barangay address");
        }
        else
            addressChangeLabel.setText("No changes detected for barangay address.");
    }
    
    private void validateAccountInfo() {
        if ((iFieldValueUpdated[2][0] == true) && ((iFieldValueUpdated[2][1] == true) || (iFieldValueUpdated[2][2] == true) ||
                 (iFieldValueUpdated[2][3] == true))) {
            errorAccountChangeLabel.setText("You can only update 1 field at a time.");
            doesUpdateFail[2] = true;
        }
        else if (iFieldValueUpdated[2][0] == true)
            checkEmailAddress();
        else if ((iFieldValueUpdated[2][0] == true) || (iFieldValueUpdated[2][1] == true) ||
                 (iFieldValueUpdated[2][2] == true))
            checkPassword();
        else
            errorAccountChangeLabel.setText("Update operation has failed.");
    }
    
    private void checkEmailAddress() {
        String newEmailAddress = emailAddressField.getText().trim();
        String currentEmailAddress = Database_Transaction.retrieveEmailAddress(connection);
        if (!(newEmailAddress.isBlank())) {
            if (!(newEmailAddress.equalsIgnoreCase(currentEmailAddress))) {
                if (Validate.validateEmail(connection, emailAddressField) == false)
                    errorAccountChangeLabel.setText("Invalid email address.");
                if (Validate.getEmailBoolean() == true)
                    errorAccountChangeLabel.setText("Email already is already in use.");
                else if (Validate.validateEmail(connection, emailAddressField) == true) {
                    errorAccountChangeLabel.setText("Successfully changed email address.");
                    Database_Transaction.updateEmailAddress(connection, emailAddressField);
                } 
            }
            else
                errorAccountChangeLabel.setText("No changes detected for email address.");
        }
        else {
            emailAddressField.setText(currentEmailAddress);
            errorAccountChangeLabel.setText("No changes applied for email address.");
        }
    }
    
    private void checkPassword() {
        if (!(new String(currentPasswordField.getPassword()).isBlank()) && 
                !(new String(newPasswordField.getPassword()).isBlank()) &&
                !(new String(confirmPasswordField.getPassword()).isBlank())) {
            boolean isPasswordCorrect = Database_Transaction.confirmPassword(connection, currentPasswordField);
            if (isPasswordCorrect == false)
                errorAccountChangeLabel.setText("Incorrect current password.");
            if (Validate.validatePassword(newPasswordField, confirmPasswordField) == false)
                errorAccountChangeLabel.setText("Passwords do not match.");
            else if ((isPasswordCorrect == true) && (Validate.validatePassword(newPasswordField, confirmPasswordField) == true)) {
                errorAccountChangeLabel.setText("Successfully changed password.");
                Database_Transaction.updatePassword(connection, confirmPasswordField);
            }  
        }
        else
            errorAccountChangeLabel.setText("Updating password has failed.");
    }
    
    private void createOrderPanel(ResultSet resultSet) {
        try {
            while(resultSet.next() == true) {
                orderHistoryPanel.setLayout(new BoxLayout(orderHistoryPanel, BoxLayout.PAGE_AXIS));
                var newOrderPanel = new JPanel();
                var qtyLabel = new JLabel();
                var dishNameLabel = new JLabel();
                var priceLabel = new JLabel();
                var cancelLabel = new JLabel();
                
                newOrderPanel.addMouseListener(new My_Mouse_Listener(newOrderPanel, orderHistoryPanel,
                                                                     "delete from database", connection));
                cancelLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
                
                String quantity = Integer.toString(resultSet.getInt("quantity")).trim();
                String dishName = resultSet.getString("name").trim();
                String unitPrice = resultSet.getBigDecimal("unit_price").toString().trim();

                newOrderPanel.setBackground(new java.awt.Color(36, 25, 29));
                newOrderPanel.setPreferredSize(new java.awt.Dimension(297, 50));

                qtyLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
                qtyLabel.setForeground(new java.awt.Color(255, 255, 255));
                qtyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                if (resultSet.getInt("quantity") > 9)
                    qtyLabel.setText(quantity + " Ã— ");
                else
                    qtyLabel.setText("  " + quantity + " Ã— ");
                dishNameLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
                dishNameLabel.setForeground(new java.awt.Color(255, 255, 255));
                dishNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                dishNameLabel.setText(dishName);

                priceLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
                priceLabel.setForeground(new java.awt.Color(255, 255, 255));
                priceLabel.setText(" - PHP " + unitPrice);

                cancelLabel.setFont(new java.awt.Font("AvenirNext LT Pro Regular", 0, 13)); // NOI18N
                cancelLabel.setForeground(new java.awt.Color(255, 255, 255));
                cancelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                cancelLabel.setText(("Cancel").trim());

                javax.swing.GroupLayout newOrderPanelLayout = new javax.swing.GroupLayout(newOrderPanel);
                newOrderPanel.setLayout(newOrderPanelLayout);
                newOrderPanelLayout.setHorizontalGroup(
                    newOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newOrderPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(qtyLabel)
                        .addGap(0, 0, 0)
                        .addComponent(dishNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cancelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
                );
                newOrderPanelLayout.setVerticalGroup(
                    newOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(qtyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(dishNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );

                orderHistoryPanel.add(newOrderPanel);
                orderHistoryPanel.add(Box.createRigidArea(new Dimension(20, 0)));
                orderHistoryPanel.revalidate();
            }
        }
        catch (Exception exception) {
            System.out.println("error error error");
        }
    }
    
    private void documentListener(JLayeredPane passwordPeekBGPanel, JPanel[] cardPanels, 
                                  JPasswordField passwordField, int index) {
        passwordField.getDocument().addDocumentListener(new My_Document_Listener(passwordPeekBGPanel, cardPanels, passwordField,index));        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(My_Account_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(My_Account_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(My_Account_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(My_Account_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new My_Account_Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accountSettingsBGPanel;
    private javax.swing.JPanel accountSettingsCard;
    private javax.swing.JLabel accountSettingsLabel;
    private javax.swing.JLabel addressChangeLabel;
    private javax.swing.JPanel addressSettingsBGPanel;
    private javax.swing.JPanel addressSettingsCard;
    private javax.swing.JLabel addressSettingsLabel;
    private javax.swing.JLayeredPane backmostPanel;
    private javax.swing.JComboBox<String> barangayAddress;
    private javax.swing.JLabel barangayLabel;
    private javax.swing.JLabel cancelLabel;
    private javax.swing.JLabel cartIcon;
    private javax.swing.JTextField completeAddressField;
    private javax.swing.JLabel completeAddressLabel;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JTextField contactNumberField;
    private javax.swing.JLabel contactNumberLabel;
    private javax.swing.JPasswordField currentPasswordField;
    private javax.swing.JLabel currentPasswordLabel;
    private javax.swing.JLabel dishNameLabel;
    private javax.swing.JTextField emailAddressField;
    private javax.swing.JLabel emailAddressLabel;
    private javax.swing.JLabel emptyLabel1;
    private javax.swing.JLabel emptyLabel2;
    private javax.swing.JLabel emptyLabel3;
    private javax.swing.JLabel errorAccountChangeLabel;
    private javax.swing.JLabel errorInfoChangeLabel;
    private javax.swing.JPanel exitBGPanel;
    private javax.swing.JLabel exitIcon;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JPanel firstBGPanel1;
    private javax.swing.JPanel firstBGPanel2;
    private javax.swing.JPanel firstBGPanel3;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel hideLabel1;
    private javax.swing.JLabel hideLabel2;
    private javax.swing.JLabel hideLabel3;
    private javax.swing.JPanel infoSettingsCard;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel newOrderPanel;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JPanel orderHistoryPanel;
    private javax.swing.JLayeredPane passwordPeekBGPanel1;
    private javax.swing.JLayeredPane passwordPeekBGPanel2;
    private javax.swing.JLayeredPane passwordPeekBGPanel3;
    private javax.swing.JPanel personalInformationBGPanel;
    private javax.swing.JLabel personalInformationLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JPanel purchaseHistoryTextBGPanel;
    private javax.swing.JLabel qtyLabel;
    private javax.swing.JLayeredPane rightPanel;
    private javax.swing.JPanel saveChangesBGPanel1;
    private javax.swing.JPanel saveChangesBGPanel2;
    private javax.swing.JPanel saveChangesBGPanel3;
    private javax.swing.JLabel saveChangesLabel1;
    private javax.swing.JLabel saveChangesLabel2;
    private javax.swing.JLabel saveChangesLabel3;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JPanel secondBGPanel1;
    private javax.swing.JPanel secondBGPanel2;
    private javax.swing.JPanel secondBGPanel3;
    private javax.swing.JLabel settingIcon;
    private javax.swing.JPanel settingsBGPanel;
    private javax.swing.JLabel settingsLabel;
    private javax.swing.JLabel showLabel1;
    private javax.swing.JLabel showLabel2;
    private javax.swing.JLabel showLabel3;
    private javax.swing.JPanel thirdBGPanel1;
    private javax.swing.JPanel thirdBGPanel2;
    private javax.swing.JPanel thirdBGPanel3;
    private javax.swing.JLabel upperText;
    private javax.swing.JLabel upperText1;
    private javax.swing.JLabel upperText2;
    private javax.swing.JLabel upperText3;
    private javax.swing.JLabel upperText4;
    private javax.swing.JLabel upperText5;
    private javax.swing.JLabel upperText6;
    private javax.swing.JPanel viewOrdersBGPanel;
    private javax.swing.JPanel viewOrdersCard;
    private javax.swing.JLabel viewOrdersLabel;
    // End of variables declaration//GEN-END:variables

}
